[{"E:\\React Projects\\todo-app\\src\\index.js":"1","E:\\React Projects\\todo-app\\src\\reportWebVitals.js":"2","E:\\React Projects\\todo-app\\src\\App.js":"3","E:\\React Projects\\todo-app\\src\\Todo.js":"4","E:\\React Projects\\todo-app\\src\\firebase.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":1642,"mtime":1607885590961,"results":"9","hashOfConfig":"7"},{"size":1893,"mtime":1607891180970,"results":"10","hashOfConfig":"7"},{"size":498,"mtime":1607488371647,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"hhx8u5",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"E:\\React Projects\\todo-app\\src\\index.js",[],["25","26"],"E:\\React Projects\\todo-app\\src\\reportWebVitals.js",[],"E:\\React Projects\\todo-app\\src\\App.js",[],"E:\\React Projects\\todo-app\\src\\Todo.js",["27"],"import React from \"react\";\r\nimport {useState} from 'react'\r\n\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  Button,\r\n  Modal,\r\n \r\n} from \"@material-ui/core\";\r\nimport \"./Todo.css\";\r\nimport db from './firebase';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper:{\r\n        position:'absolute',\r\n        width:500,\r\n        backgroundColor:theme.palette.background.paper,\r\n        border:'2px soild #000',\r\n        boxShadow:theme.shadows[5],\r\n        padding:theme.spacing(9,50,3),\r\n        \r\n    },\r\n}));\r\n\r\n\r\n\r\n\r\nfunction Todo(props) {\r\n  //props = properties\r\n  const classes = useStyles();\r\n  const [open,setOpen] = useState(false);\r\n  const [input,setInput] = useState();\r\n  const handleOpen = () =>{\r\n      setOpen(true);  \r\n  };\r\n  const updateTodo =() =>{\r\n      // update the todo with the new input text\r\n      db.collection('todos').doc(props.todo.id).set({\r\n        todo: input\r\n      },{merge:true});\r\n\r\n      setOpen(false);\r\n  }\r\n  \r\n  return (\r\n      <>\r\n        <Modal\r\n  open={open}\r\n  onClose={e =>setOpen(false)}\r\n>\r\n    <div className = {classes.paper}>\r\n        <h1>I am a modal</h1>\r\n        <input placeholder={props.todo.todo} value={input} onChange={event => setInput(event.target.value)} />\r\n        <Button onClick={updateTodo}>Update Todo</Button>\r\n    </div>\r\n  \r\n</Modal>\r\n\r\n    <List className=\"todo__list\">\r\n      <ListItem>\r\n        <ListItemAvatar></ListItemAvatar>\r\n\r\n        <ListItemText primary={props.todo.todo} secondary=\"Dummy Lines\" />\r\n      </ListItem>\r\n      <Button onClick={e => setOpen(true) }>Edit</Button>\r\n              <DeleteForeverIcon onClick = {event => db.collection('todos').doc(props.todo.id).delete()}/>  \r\n              \r\n    \r\n    </List>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Todo\r\n","E:\\React Projects\\todo-app\\src\\firebase.js",[],["28","29"],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":38,"column":9,"nodeType":"36","messageId":"37","endLine":38,"endColumn":19},{"ruleId":"30","replacedBy":"38"},{"ruleId":"32","replacedBy":"39"},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-unused-vars","'handleOpen' is assigned a value but never used.","Identifier","unusedVar",["40"],["41"],"no-global-assign","no-unsafe-negation"]